tmp <- lapply(files_list[id], read.csv) # apply Read.csv to all items in the list of files
for (i in 1:length(id)) {
dat <- rbind(dat, c(id[i], comp[i], cor(tmp[[i]]$nitrate,tmp[[i]]$sulfate)))
}
}
cor("specdata")
corr("specdata")
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
files_list <- list.files(directory, full.names=TRUE)   # creates a list of files
#print (files_list)
id <- 1:length(files_list)
comp <- complete(directory, id)
tmp <- lapply(files_list[id], read.csv) # apply Read.csv to all items in the list of files
for (i in 1:length(id)) {
if(comp[i] >= threshold) {
dat <- rbind(dat, c(id[i], comp[i], cor(tmp[[i]]$nitrate,tmp[[i]]$sulfate, use="complete.obs")))
}
dat[,3]
}
}
cor(tmp[[i]]$nitrate,tmp[[i]]$sulfate, use="complete.obs")
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
files_list <- list.files(directory, full.names=TRUE)   # creates a list of files
#print (files_list)
id <- 1:length(files_list)
comp <- complete(directory, id)
tmp <- lapply(files_list[id], read.csv) # apply Read.csv to all items in the list of files
for (i in 1:length(id)) {
if(comp[i] >= threshold) {
dat <- rbind(dat, c(id[i], comp[i], cor(tmp[[i]]$nitrate,tmp[[i]]$sulfate, use="complete.obs")))
}
dat[,3]
}
}
corr("specdata")
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
files_list <- list.files(directory, full.names=TRUE)   # creates a list of files
#print (files_list)
id <- 1:length(files_list)
comp <- complete(directory, id)
tmp <- lapply(files_list[id], read.csv) # apply Read.csv to all items in the list of files
for (i in 1:length(id)) {
if(comp[i] >= threshold) {
cor(tmp[[i]]$nitrate,tmp[[i]]$sulfate, use="complete.obs")
}
}
}
corr("specdata",150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
files_list <- list.files(directory, full.names=TRUE)   # creates a list of files
#print (files_list)
id <- 1:length(files_list)
comp <- complete(directory, id)
tmp <- lapply(files_list[id], read.csv) # apply Read.csv to all items in the list of files
for (i in 1:length(id)) {
if(comp[[i]] >= threshold) {
cor(tmp[[i]]$nitrate,tmp[[i]]$sulfate, use="complete.obs")
}
}
}
corr("specdata",150)
+       cor(tmp[[1]]$nitrate,tmp[[1]]$sulfate, use="complete.obs")
comp[[1]]
comp
files_list <- list.files(directory, full.names=TRUE)   # creates a list of files
id <- 1:length(files_list)
comp <- complete(directory, id)
comp
comp[[1]]
count
length(comp[[1]])
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
files_list <- list.files(directory, full.names=TRUE)   # creates a list of files
#print (files_list)
id <- 1:length(files_list)
comp <- complete(directory, id)
tmp <- lapply(files_list[id], read.csv) # apply Read.csv to all items in the list of files
for (i in 1:length(id)) {
if(length(comp[[i]]) >= threshold) {
cor(tmp[[i]]$nitrate,tmp[[i]]$sulfate, use="complete.obs")
}
}
}
corr("specdata",150)
length(comp)
comp <- complete(directory, id)
length(comp)
id
length(id)
dim(comp)
names(comp)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
files_list <- list.files(directory, full.names=TRUE)   # creates a list of files
#print (files_list)
id <- 1:length(files_list)
comp <- complete(directory, id)
tmp <- lapply(files_list[id], read.csv) # apply Read.csv to all items in the list of files
for (i in 1:length(id)) {
if(comp[[i]]$nobs >= threshold) {
cor(tmp[[i]]$nitrate,tmp[[i]]$sulfate, use="complete.obs")
}
}
}
corr("specdata",150)
comp
comp[[1]]
comp[[1]]$nobs
comp[[1]][[1]]
comp[[1]][[2]]
comp[[1]]
comp[[2]]
comp[[2]][1]
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
files_list <- list.files(directory, full.names=TRUE)   # creates a list of files
#print (files_list)
id <- 1:length(files_list)
comp <- complete(directory, id)
tmp <- lapply(files_list[id], read.csv) # apply Read.csv to all items in the list of files
for (i in 1:length(id)) {
if(comp[[2]][[i]] >= threshold) {
cor(tmp[[i]]$nitrate,tmp[[i]]$sulfate, use="complete.obs")
}
}
}
corr("specdata",150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
files_list <- list.files(directory, full.names=TRUE)   # creates a list of files
#print (files_list)
id <- 1:length(files_list)
comp <- complete(directory, id)
tmp <- lapply(files_list[id], read.csv) # apply Read.csv to all items in the list of files
for (i in 1:length(id)) {
if(comp[[2]][[i]] >= threshold) {
print(cor(tmp[[i]]$nitrate,tmp[[i]]$sulfate, use="complete.obs"))
}
}
}
corr("specdata",150)
rep <- c(rep(0,x ))
?rep
return <- c(rep(0,100 ))
retur <- c(rep(0,100 ))
rm(return)
retur
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
files_list <- list.files(directory, full.names=TRUE)   # creates a list of files
#print (files_list)
id <- 1:length(files_list)
comp <- complete(directory, id)
tmp <- lapply(files_list[id], read.csv) # apply Read.csv to all items in the list of files
for (i in 1:length(id)) {
ret[i] <- 0
if(comp[[2]][[i]] >= threshold) {
ret[i] <- cor(tmp[[i]]$nitrate,tmp[[i]]$sulfate, use="complete.obs")
}
ret
}
}
corr("specdata",150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
files_list <- list.files(directory, full.names=TRUE)   # creates a list of files
#print (files_list)
id <- 1:length(files_list)
comp <- complete(directory, id)
ret <- numeric()
tmp <- lapply(files_list[id], read.csv) # apply Read.csv to all items in the list of files
for (i in 1:length(id)) {
ret[i] <- 0
if(comp[[2]][[i]] >= threshold) {
ret[i] <- cor(tmp[[i]]$nitrate,tmp[[i]]$sulfate, use="complete.obs")
}
ret
}
}
corr("specdata",150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
files_list <- list.files(directory, full.names=TRUE)   # creates a list of files
#print (files_list)
id <- 1:length(files_list)
comp <- complete(directory, id)
ret <- numeric()
tmp <- lapply(files_list[id], read.csv) # apply Read.csv to all items in the list of files
for (i in 1:length(id)) {
ret[i] <- 0
if(comp[[2]][[i]] >= threshold) {
ret[i] <- cor(tmp[[i]]$nitrate,tmp[[i]]$sulfate, use="complete.obs")
}
}
ret
}
corr("specdata",150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
files_list <- list.files(directory, full.names=TRUE)   # creates a list of files
#print (files_list)
id <- 1:length(files_list)
comp <- complete(directory, id)
ret <- numeric()
tmp <- lapply(files_list[id], read.csv) # apply Read.csv to all items in the list of files
for (i in 1:length(id)) {
# ret[i] <- 0
if(comp[[2]][[i]] >= threshold) {
ret <- c(ret, cor(tmp[[i]]$nitrate,tmp[[i]]$sulfate, use="complete.obs"))
}
}
ret
}
head(corr("specdata",150))
head(corr("specdata",400))
head(corr("specdata",5000))
summary(corr("specdata",150))
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
files_list <- list.files(directory, full.names=TRUE)   # creates a list of files
#print (files_list)
id <- 1:length(files_list)
comp <- complete(directory, id)
ret <- numeric()
tmp <- lapply(files_list[id], read.csv) # apply Read.csv to all items in the list of files
for (i in 1:length(id)) {
# ret[i] <- 0
if(comp[[2]][[i]] >= threshold) {
ret <- c(ret, cor(tmp[[i]]$nitrate,tmp[[i]]$sulfate, use="complete.obs"))
}
}
ret
}
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
head(cr)
summary(cr)
cr <- corr("specdata")
head(cr)
summary(cr)
cr <- corr("specdata")
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
files_list <- list.files(directory, full.names=TRUE)   # creates a list of files
#print (files_list)
id <- 1:length(files_list)
comp <- complete(directory, id)
ret <- numeric()
tmp <- lapply(files_list[id], read.csv) # apply Read.csv to all items in the list of files
for (i in 1:length(id)) {
# ret[i] <- 0
if(comp[[2]][[i]] >= threshold) {
ret <- c(ret, cor(tmp[[i]]$nitrate,tmp[[i]]$sulfate, use="na.or.complete"))
}
}
ret
}
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
head(cr)
summary(cr)
cr <- corr("specdata")
head(cr)
summary(cr)
length(cr)
rm(list=ls)
rm(list=ls())
source("pollutantmean.R")
pollutantmean(directory = "specdata", pollutant = "nitrate")
#pollutantmeanBetter(directory = "specdata", pollutant = "nitrate")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
#pollutantmeanFirstCut("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 23)
source("complete.R")
#complete("specdata")
complete("specdata", 1)
completeNew("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
completeNew("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
completeNew("specdata", 30:25)
complete("specdata", 3)
completeNew("specdata", 3)
#completeNew("specdata")
complete("specdata", c(2, 4, 8, 10, 12))
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
head(cr)
summary(cr)
cr <- corr("specdata")
head(cr)
summary(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
?corr
?cor
library(datasets)
data(iris)
?iris
mean(iris$Sepal.Length)
head(iris)
head(iris['Species'=='virginica'])
head(iris[,'Species'=='virginica'])
iris['Species'=='virginica']
iris['Species']
iris['Species'==virginica]
iris['Species'=virginica]
apply(X=iris,MARGIN = 2,FUN = mean)
rowMeans(iris$Sepal.Width)
split.data.frame(iris,f=iris$Sepal.WIdth)
split.data.frame(x=iris,f=iris$Sepal.WIdth)
tapply(iris,INDEX=iris$Sepal.Length, FUN=mean)
tapply(iris,INDEX=iris$Specis, FUN=mean)
tapply(iris,INDEX=iris$Species, FUN=mean)
iris$Species
iris[which(Speceis=='virginica')]
iris[which("Speceis"=="virginica")]
to.list(iris[which("Speceis"=="virginica")])
iris[which("Speceis"=="virginica")]
iris[,which("Speceis"=="virginica")]
iris[,which(Speceis=="virginica")]
iris[,which(Species == "virginica")]
iris[,which(Species == 'virginica')]
iris[,which(Species=="virginica")]
iris[,which(Species=='virginica')]
iris[,which('Species'=='virginica')]
iris[which('Species'=='virginica'),]
iris[,which('Species'=='virginica')]
head(iris)
head(iris[,which('Species'=='virginica')])
head(iris[,which('Species'=='virginica')])
subset(iris, Species == 'virginica')
subset(iris, Species == 'virginica')
dim(iris)
subset(iris, Species == 'virginica')
subset(iris, Species == 'virginica')$Sepal.Length
mean(subset(iris, Species == 'virginica')$Sepal.Length)
mean(subset(iris, Species == 'virginica')$Sepal.Length)
apply(iris,2,mean)
colMeans(iris)
apply(iris[,1:4],2,mean)
library(datasets)
data(mtcars)
?mtcars
sapply(mtcars, cyl, mean)
split(mtcars, mtcars$cyl)
head(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429-82.63636
debug(ls)
ls
ls
?debug
q
restore
?debug
stop
stop
stop()
?
stop
stop()
where
W
cont
C
help
?
?
h
help
?debug
help
help
help
help
finish
Quit
Stop
?debug
help
head(mtcars)
tapply(mtcars$hp, mtcars$cyl, mean)
source('~/Downloads/Git/LearningR/R-Intro.R')
ff
undebug(ls)
undebug(ls)
